networks:
  mongo-network:
    driver: bridge

services:
  mongo1:
    image: mongo:latest
    container_name: mongodb1
    hostname: mongo1
    networks:
      - mongo-network
    volumes:
      - mongo1-data:/data/db
    command: ["--replSet", "rs0", "--bind_ip_all"]
    ports:
      - "27017:27017"
    healthcheck:
      test: |
        mongosh --host mongo1:27017 --eval 'try { db.adminCommand("ping").ok } catch (e) { print(e); quit(1); }' --quiet
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s

  mongo2:
    image: mongo:latest
    container_name: mongodb2
    hostname: mongo2
    networks:
      - mongo-network
    volumes:
      - mongo2-data:/data/db
    command: ["--replSet", "rs0", "--bind_ip_all"]
    ports:
      - "27018:27017"
    healthcheck:
      test: |
        mongosh --host mongo2:27017 --eval 'try { db.adminCommand("ping").ok } catch (e) { print(e); quit(1); }' --quiet
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s

  mongo3:
    image: mongo:latest
    container_name: mongodb3
    hostname: mongo3
    networks:
      - mongo-network
    volumes:
      - mongo3-data:/data/db
    command: ["--replSet", "rs0", "--bind_ip_all"]
    ports:
      - "27019:27017"
    healthcheck:
      test: |
        mongosh --host mongo3:27017 --eval 'try { db.adminCommand("ping").ok } catch (e) { print(e); quit(1); }' --quiet
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s

  mongo-setup:
    image: mongo:latest
    container_name: mongo-setup
    networks:
      - mongo-network
    volumes:
      - ./init-replica-set.sh:/scripts/init-replica-set.sh
    environment:
      - NUM_REPLICAS=${NUM_REPLICAS:-3} # Default to 3 replicas
    command:
      - /bin/bash
      - -c
      - |
        echo 'Attempting to connect to MongoDB instances for setup...'
        # NUM_REPLICAS is an environment variable available to the shell.
        # NUM_REPLICAS_IN_SCRIPT will be set by the shell.
        NUM_REPLICAS_IN_SCRIPT=${NUM_REPLICAS:-3}
        # Use $$ for shell variables in subsequent commands to prevent Compose interpolation.
        echo "Waiting for $$NUM_REPLICAS_IN_SCRIPT MongoDB instance(s)..."

        for i in $$(seq 1 $$NUM_REPLICAS_IN_SCRIPT); do
          echo "Waiting for mongo$$i:27017..."
          until mongosh --host "mongo$$i:27017" --eval 'quit(db.adminCommand("ping").ok ? 0 : 1)' --quiet; do
            echo "mongo$$i not ready yet, retrying..."
            sleep 2
          done
          echo "mongo$$i is up."
        done

        echo "All MongoDB instances are responsive. Running init-replica-set.sh..."
        /scripts/init-replica-set.sh
    depends_on:
      mongo1:
        condition: service_healthy
      mongo2:
        condition: service_healthy
      mongo3:
        condition: service_healthy

volumes:
  mongo1-data:
  mongo2-data:
  mongo3-data:
